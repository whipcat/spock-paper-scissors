{"version":3,"sources":["core/options.js","context/index.js","core/keyframes.js","option/styled/index.js","option/index.js","core/hands.js","footer/styled/index.js","footer/index.js","message/styled/index.js","message/styled/colors.js","message/index.js","App.js","index.js"],"names":["ICONS","NAMES","GameContext","React","createContext","useGameContext","context","useContext","Error","GameProviderContext","children","_useState","useState","_p1","_p2","spocked","answered","winner","message","score","me","spock","splashIconArray","cpuHand","_useState2","Object","slicedToArray","gameState","_setGameState","useEffect","data","localStorageHelper","get","setGameState","save","i","_arr","push","flattend","reduce","a","b","concat","getChoicesForCPU","next","prev","objectSpread2","_recordScore","myScore","parseInt","spockScore","newScore","item","window","localStorage","getItem","JSON","parse","setItem","stringify","remove","removeItem","clearAll","react_default","createElement","Fragment","Provider","value","playHand","hand","handSpock","Math","floor","random","length","console","log","playAgain","Beacon","keyframes","_templateObject","Column","Styled","div","styled_templateObject","props","align","Icon","span","_templateObject2","Chip","_templateObject3","Option","icon","number","type","_useGameContext","_useGameContext$gameS","animation","toLowerCase","colorOfChip","className","onClick","HANDS","name","Container","footer_styled_templateObject","Player","styled_templateObject2","Score","h1","styled_templateObject3","Footer","MessageContainer","message_styled_templateObject","Background","message_styled_templateObject2","bg","Text","message_styled_templateObject3","Message","show","bgColor","getBgColor","App","animating","showOptions","options","filter","map","src_option","key","footer","src_message","rootElement","document","getElementById","ReactDOM","render","StrictMode","src_context","src_App"],"mappings":"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","file":"static/js/main.2a946746.chunk.js","sourcesContent":["const ICONS = {\n  ROCK: \"fa fa-hand-rock-o\",\n  PAPER: \"fa fa-hand-paper-o\",\n  SCISSORS: \"fa fa-hand-scissors-o\",\n  SPOCK: \"fa fa-hand-spock-o\",\n  REFRESH: \"fa fa-refresh\"\n};\n\nconst NAMES = {\n  ROCK: \"rock\",\n  PAPER: \"paper\",\n  SCISSORS: \"scissors\",\n  SPOCK: \"spock\"\n};\n\nexport { ICONS, NAMES };\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NAMES } from \"../core/options\";\n\nconst GameContext = React.createContext({});\nconst KEY = \"score\";\n\nconst useGameContext = () => {\n  const context = React.useContext(GameContext);\n  if (!context) {\n    throw new Error(\"No context found!\");\n  }\n\n  return context;\n};\n\nconst GameProviderContext = ({ children }) => {\n  const [gameState, _setGameState] = useState({\n    _p1: \"Me\",\n    _p2: \"Spock\",\n    spocked: false,\n    answered: false,\n    winner: \"\",\n    message: \"\",\n    score: {\n      me: 0,\n      spock: 0\n    },\n    splashIconArray: [],\n    cpuHand: NAMES.ROCK // needed for flipping animation\n  });\n\n  useEffect(() => {\n    const data = localStorageHelper().get();\n\n    if (!data) {\n      localStorageHelper().save({\n        me: 0,\n        spock: 0\n      });\n    } else {\n      setGameState({ score: data });\n    }\n  }, []);\n\n  useEffect(() => {\n    const getChoicesForCPU = () => {\n      const splashIconArray = [];\n\n      for (let i = 0; i < 29; i++) {\n        const _arr = [NAMES.ROCK, NAMES.PAPER, NAMES.SCISSORS];\n        // every 9th item add 'spock'\n        if (i % 9 === 0) {\n          _arr.push(NAMES.SPOCK);\n        }\n\n        splashIconArray.push(_arr);\n      }\n\n      const flattend = splashIconArray.reduce((a, b) => a.concat(b), []);\n      setGameState({\n        splashIconArray: flattend,\n        cpuHand: flattend[0]\n      });\n    };\n\n    getChoicesForCPU();\n  }, []);\n\n  const setGameState = next => {\n    _setGameState(prev => ({ ...prev, ...next }));\n  };\n\n  const playAgain = () => {\n    // don'reset winner to 'null'\n    // so backgroundColor of message will be the same\n    // when animating out\n    setGameState({\n      spocked: false,\n      answered: false,\n      message: \"\",\n      score: localStorageHelper().get()\n    });\n  };\n\n  const playHand = hand => {\n    const { answered, splashIconArray, _p1, _p2 } = gameState;\n    let spocked = false;\n    let winner = null;\n    let message = null;\n    let score = gameState.score;\n\n    const handSpock =\n      splashIconArray[Math.floor(Math.random() * splashIconArray.length)];\n    // splashIconArray[3]; // spock\n\n    if (answered) {\n      return;\n    }\n\n    if (handSpock === NAMES.SPOCK) {\n      spocked = true;\n      winner = _p2;\n      message = \"You've been Spocked'd\";\n    } else {\n      if (hand === handSpock) {\n        winner = \"tie\";\n        message = \"it's a tie\";\n      } else {\n        if (\n          (hand === NAMES.ROCK && handSpock === NAMES.SCISSORS) ||\n          (hand === NAMES.PAPER && handSpock === NAMES.ROCK) ||\n          (hand === NAMES.SCISSORS && handSpock === NAMES.PAPER)\n        ) {\n          winner = _p1;\n          message = \"You won!\";\n        } else {\n          winner = _p2;\n          message = \"You lost!\";\n        }\n      }\n    }\n\n    if (winner !== \"tie\") {\n      score = _recordScore(winner);\n    }\n\n    setGameState({\n      answered: hand,\n      spocked,\n      winner,\n      message,\n      score,\n      cpuHand: handSpock\n    });\n\n    console.log(\"CPU hand = \", handSpock);\n    console.log(\"PLAYER hand = \", hand);\n    console.log(\"=======================\");\n    console.log(\"message = \", message);\n    console.log(\"score = \", score);\n    console.log(\"=======================\");\n  };\n\n  const _recordScore = winner => {\n    const { score, _p1, _p2 } = gameState;\n\n    let myScore = parseInt(score.me, 10);\n    let spockScore = parseInt(score.spock, 10);\n\n    if (winner === _p1) {\n      myScore = parseInt(score.me, 10) + 1;\n    }\n\n    if (winner === _p2) {\n      spockScore = parseInt(score.spock, 10) + 1;\n    }\n\n    const newScore = {\n      me: myScore,\n      spock: spockScore\n    };\n\n    localStorageHelper().save(newScore);\n\n    return newScore;\n  };\n\n  const localStorageHelper = () => {\n    const factory = {\n      get: () => {\n        const item = window.localStorage.getItem(KEY);\n        if (!item) {\n          return {\n            me: 0,\n            spock: 0\n          };\n        }\n        if (item && typeof item === \"string\") {\n          return JSON.parse(item);\n        } else {\n          return item;\n        }\n      },\n      save: data => {\n        window.localStorage.setItem(KEY, JSON.stringify(data));\n      },\n      remove: () => {\n        window.localStorage.removeItem(KEY);\n      },\n      clearAll: () => {\n        window.localStorage.clearAll();\n      }\n    };\n\n    return factory;\n  };\n\n  return (\n    <>\n      <GameContext.Provider\n        value={{\n          gameState,\n          setGameState,\n          playHand,\n          playAgain\n        }}\n      >\n        {children}\n      </GameContext.Provider>\n    </>\n  );\n};\n\nGameProviderContext.propTypes = {\n  children: PropTypes.any.isRequired\n};\n\nexport { useGameContext, GameContext };\nexport default GameProviderContext;\n","import { keyframes } from \"styled-components\";\n\nexport const Beacon = keyframes` {\n  0% {\n    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.35);\n  }\n  100% {\n    box-shadow: 0 0 0 2rem transparent;\n  }\n}`;\n","import Styled from \"styled-components\";\nimport { Beacon } from \"../../core/keyframes\";\n\nconst Column = Styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: ${props => props.align};\n`;\n\nconst Icon = Styled.span`\n  display: inline-block;\n  font: normal normal normal 14px/1 FontAwesome;\n  width: 1.28571429em;\n  text-align: center;\n  font-size: 65%;\n  cursor: pointer;\n`;\n\nconst Chip = Styled.div`\n   width: 1em;\n  height: 1em;\n  border-radius: 100%;\n  display: flex;\n  flex-flow: row;\n  align-items: center;\n  justify-content: center;\n  box-shadow: rgba(35, 41, 44, 0.5) 0px 0.1em 0.25em -0.15em;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &.bg-light {\n    background: #f3f4f5;\n    color: #23292C;\n  }\n\n  &.bg-dark {\n    background: #23292C;\n    color: #f3f4f5;\n  }\n\n  &.beacon-1 {\n    animation: ${Beacon} 1s infinite linear;\n  }\n  &.beacon-2 {\n    animation: ${Beacon} 1s infinite linear;\n    animation-delay: .15s;\n  }\n  &.beacon-3 {\n    animation: ${Beacon} 1s infinite linear;\n    animation-delay: .3s;\n  }\n`;\n\nexport { Column, Chip, Icon };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useGameContext } from \"../context\";\n\nimport { NAMES } from \"../core/options\";\nimport { Column, Chip, Icon } from \"./styled\";\n\nconst Option = ({ hand, icon, number, type }) => {\n  const {\n    playHand,\n    gameState: { answered, winner }\n  } = useGameContext();\n  const animation =\n    hand.toLowerCase() !== NAMES.SPOCK ? `beacon-${parseInt(number, 10)}` : \"\";\n\n  const setClasses = () => {\n    if (answered === hand && winner.toLowerCase() === \"me\") {\n      return \"bg-dark\";\n    }\n    if (!answered) {\n      return `bg-light ${animation}`;\n    }\n\n    return \"\";\n  };\n\n  const colorOfChip = setClasses();\n\n  if (type && type.toLowerCase() === \"cpu\") {\n    return (\n      <Column align=\"align-center\">\n        <Chip className=\"bg-light\">\n          <Icon className={`${icon}`} />\n        </Chip>\n      </Column>\n    );\n  }\n\n  return (\n    <Column align=\"align-center\">\n      <Chip className={`${colorOfChip}`} onClick={() => playHand(hand)}>\n        <Icon className={`${icon}`} />\n      </Chip>\n    </Column>\n  );\n};\n\nOption.propTypes = {\n  hand: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  type: PropTypes.string\n};\n\nexport default Option;\n","import { ICONS, NAMES } from \"./options\";\n\nconst HANDS = [\n  {\n    name: NAMES.ROCK,\n    icon: ICONS.ROCK\n  },\n  {\n    name: NAMES.PAPER,\n    icon: ICONS.PAPER\n  },\n  {\n    name: NAMES.SCISSORS,\n    icon: ICONS.SCISSORS\n  },\n  {\n    name: NAMES.SPOCK,\n    icon: ICONS.SPOCK\n  }\n];\n\nexport default HANDS;\n","import Styled from \"styled-components\";\n\nconst Container = Styled.div`\n  width: 100vw;\n  text-align: center;\n  margin: 0 auto;\n  display: flex;\n  flex-flow: row;\n  justify-content: space-around;\n`;\n\nconst Player = Styled.span`\n  font-size: 2.5rem;\n  opacity: .35;\n`;\n\nconst Score = Styled.h1`\n  margin: 0;\n  font-size: 4rem;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  display: block;\n  font-weight: bold;\n  color: #f3f4f5;\n  margin-top: 0!important;\n`;\n\nexport { Container, Player, Score };\n","import React from \"react\";\nimport { useGameContext } from \"../context\";\n\nimport { Container, Player, Score } from \"./styled\";\n\nconst Footer = () => {\n  const {\n    gameState: { score, _p1: me, _p2: spock }\n  } = useGameContext();\n\n  return (\n    <Container>\n      <div>\n        <Player>{me}</Player>\n        <Score>{score.me}</Score>\n      </div>\n      <div>\n        <Player>{spock}</Player>\n        <Score>{score.spock}</Score>\n      </div>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import Styled from \"styled-components\";\nimport { lighter } from \"./colors\";\n\nconst MessageContainer = Styled.div`\n  bottom: 35%;\n  left: 50%;\n  position: absolute;\n  transform: translateX(-50%) scale(0);\n  transition: .3s cubic-bezier(0.5, 0.1, 0.3, 1.4);\n  transition-delay: 0s;\n  z-index: 2;\n\n  &.show {\n    bottom: 50%;\n    transform: translateX(-50%) scale(1);\n    transition-delay: .3s * 3;\n  }\n`;\n\nconst Background = Styled.div`\n  display: flex;\n  flex-flow: row;\n  padding: .5em 1em;\n  align-items: center;\n\n  justify-content: center;\n  border-radius: 3em;\n  box-shadow: 0 0 2em -0.3em rgba(18, 21, 22, 0.65);\n  line-height: 1.5;\n  opacity: .9;\n  background: ${props => props.bg};\n  color: ${lighter};\n\n  .refresh {\n    font-size:1em;\n  }\n`;\n\nconst Text = Styled.div`\n  margin-right: 1em;\n  font-size: 1.5em;\n`;\n\nexport { MessageContainer, Background, Text };\n","export const base = \"#00BCD4\";\nexport const lighter = \"#f3f4f5\";\n\nexport const info = base;\nexport const alert = \"#FF3B80\";\nexport const warning = \"#cddc39\";\nexport const caution = \"#ffca28\";\nexport const success = \"#ff5722\";\n","import React from \"react\";\nimport { useGameContext } from \"../context\";\nimport { ICONS } from \"../core/options\";\n\nimport { MessageContainer, Background, Text } from \"./styled\";\nimport { Chip, Icon } from \"../option/styled\";\nimport { base, alert, warning, success } from \"./styled/colors\";\n\nconst Message = () => {\n  const {\n    gameState: { message, answered, winner, spocked },\n    playAgain\n  } = useGameContext();\n\n  // has to be in an effect\n  // otherwise animating out the message wil loose the bg-color\n  const getBgColor = () => {\n    if (winner) {\n      if (winner.toLowerCase() === \"tie\") {\n        return base;\n      }\n      if (winner.toLowerCase() === \"me\") {\n        return success;\n      }\n      if (winner.toLowerCase() === \"spock\") {\n        return alert;\n      }\n    }\n\n    if (spocked) {\n      return warning;\n    }\n  };\n\n  const show = answered ? \"show\" : \"\";\n  const bgColor = getBgColor();\n\n  return (\n    <MessageContainer className={show}>\n      <Background bg={bgColor} onClick={playAgain}>\n        <Text>{message}</Text>\n        <Chip className=\"beacon-1\">\n          <Icon className={`${ICONS.REFRESH} refresh`} />\n        </Chip>\n      </Background>\n    </MessageContainer>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport { useGameContext } from \"./context\";\n\nimport Option from \"./option\";\nimport { NAMES } from \"./core/options\";\nimport HANDS from \"./core/hands\";\n\nimport Footer from \"./footer\";\nimport Message from \"./message\";\n\nimport \"./style.scss\";\n\nconst App = () => {\n  const {\n    gameState: { answered, cpuHand }\n  } = useGameContext();\n\n  const animating = answered ? \"flip-me\" : \"\";\n\n  const showOptions = (hand, type = null) => {\n    let options = [];\n\n    if (hand) {\n      options = HANDS.filter(item => item.name.toLowerCase() === hand);\n    } else {\n      options = HANDS.filter(item => item.name.toLowerCase() !== NAMES.SPOCK);\n    }\n\n    const items = options.map(({ name, icon }, i) => {\n      return (\n        <Option\n          key={`icon--${i}`}\n          hand={name}\n          icon={icon}\n          number={i + 1}\n          type={type}\n        />\n      );\n    });\n\n    return items;\n  };\n\n  return (\n    <div className=\"App\">\n      <article className=\"column\">\n        <div className=\"description\">\n          <h1>Rock Paper Scissors *No Lizard* Spock</h1>\n          <small>\n            As <b>Sheldon</b> explains, \"Scissors cuts paper, paper covers rock,\n            rock crushes lizard, lizard poisons Spock, Spock smashes scissors,\n            scissors decapitates lizard, lizard eats paper, paper disproves\n            Spock, Spock vaporizes rock, and as it always has, rock crushes\n            scissors.\"\n          </small>\n        </div>\n        <div className={`flip-container ${animating}`}>\n          <div className=\"flipper\">\n            <div className=\"front\">{showOptions(NAMES.SPOCK, \"cpu\")}</div>\n            <div className=\"back\">{showOptions(cpuHand, \"cpu\")}</div>\n          </div>\n        </div>\n        <div className=\"answers row around\">{showOptions()}</div>\n        <Footer />\n        <Message />\n      </article>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GameContextProvider from \"./context\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <GameContextProvider>\n      <App />\n    </GameContextProvider>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}